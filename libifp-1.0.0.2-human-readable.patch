--- libifp-1.0.0.2/examples/ifpline.c.orig	2007-01-18 20:45:51.000000000 +0100
+++ libifp-1.0.0.2/examples/ifpline.c	2007-01-18 20:46:09.000000000 +0100
@@ -42,6 +42,25 @@ static int update_progress(void * contex
 	return 0;
 }
 
+/* Calculate a simple "human-readable" value. Fills in 'target' with
+   3 characters of value and 1 of unit. Since the iFP is a storage
+   device, use decimal units. */
+void calc_human(int value, char target[5]) {
+    if (value > 1000*1000*1000) {
+	snprintf(target, 5, "%.1f%c", value / (float)(1000*1000*1000), 'G');
+    } else if (value > 1000*1000*10) {
+	snprintf(target, 5, "%3d%c", value / (1000*1000), 'M');
+    } else if (value > 1000*1000) {
+	snprintf(target, 5, "%.1f%c", value / (float)(1000*1000), 'M');
+    } else if (value > 1000*10) {
+	snprintf(target, 5, "%3d%c", value / (1000*1000), 'K');
+    } else if (value > 1000) {
+	snprintf(target, 5, "%.1f%c", value / (float)(1000), 'K');
+    } else {
+	snprintf(target, 5, "%d%c", value, 'B');
+    }
+}
+
 int upload(struct ifp_device *dev, int argc, char *argv[]) {
     int retval = 0;
     char ifp_path[IFP_MAXPATHLEN];
@@ -339,6 +358,29 @@ int ifp_check_connect(struct ifp_device 
     return (ifp_battery(dh) >= 0);
 }
 
+int ifp_df(struct ifp_device *dev, int argc, char *argv[]) {
+    int cap = ifp_capacity(dev), free = ifp_freespace(dev);
+    if (argc == 1) {
+	if (!strcmp(argv[0], "-h")) {
+	    char cap_target[5], free_target[5];
+	    calc_human(cap, cap_target);
+	    calc_human(free, free_target);
+	    printf("Capacity: %s\n", cap_target);
+	    printf("Free:     %s\n", free_target);
+	} else {
+	    printf("usage: df [-h]\n");
+	    return -1;
+	}
+    } else if (argc == 0) {
+	printf("Capacity: %d bytes\n", cap);
+	printf("Free:     %d bytes\n", free);
+    } else {
+	printf("usage: df [-h]\n");
+	return -1;
+    }
+    return 0;
+}
+
 int format_media(struct ifp_device *dev) {
 	int i=0;
 
@@ -752,12 +794,12 @@ int main(int argc, char **argv)
 	is_mc = IS_IFP;
     }
 
-    /* no command */
-    if (argc < 2) {
+    /* no command, or help request */
+    if (argc < 2 || strstr(cmd, "help") || !strcmp(cmd, "-h")) {
 	help(argv[0]);
 	return 0;
     }
-	    
+    
     usb_init();
 
     retval = load_device(dev, is_mc == IS_MC);
@@ -772,8 +814,7 @@ int main(int argc, char **argv)
 	}
 
     } else if (strcmp(cmd, "df") == 0) {
-	printf("Capacity: %d bytes\n", ifp_capacity(dev));
-	printf("Free:     %d bytes\n", ifp_freespace(dev));
+	retval = ifp_df(dev, cur_cnt, cur_arg);
 
     } else if (strcmp(cmd, "put") == 0) {
 	retval = ifp_put(dev, cur_cnt, cur_arg);
@@ -900,7 +941,7 @@ void help(char *prog) {
     printf("usage: %s command params\n",prog);
     printf("commands:\n");
     printf("    ls [directory]\n");
-    printf("    df\n");
+    printf("    df [-h]\n");
     printf("    upload localfile ifptarget\n");
     printf("    upload localdir  ifpdir\n");
     printf("    put localfile\n");
